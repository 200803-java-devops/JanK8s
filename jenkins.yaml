credentials:
    system:
      domainCredentials:
      - credentials:
        - string:
            description: "jenkins webhook token"
            id: "4c65c3ce-abf9-498d-9cb6-985c27c2f553"
            scope: GLOBAL
            secret: ${GITHUB_WEBHOOK_TOKEN}
        - string:
            description: "Slack Token"
            scope: GLOBAL
            secret: ${SLACK_TOKEN}
        - usernamePassword:
            description: "docker hub"
            id: "docker_hub_credentials"
            password: ${DOCKER_HUB_TOKEN}
            scope: GLOBAL
            username: ${DOCKER_HUB_USERNAME}
jenkins:
  systemMessage: "Jenkins Configuration as Code Example"
  numExecutors: 1
  mode: NORMAL
  securityRealm:
    local:
      allowsSignup: false
      users:
       - id: admin
         password: admin
  authorizationStrategy:
    loggedInUsersCanDoAnything:
      allowAnonymousRead: false
  clouds:
  - kubernetes:
        connectTimeout: 5
        containerCapStr: "10"
        #change jenkins url
        jenkinsUrl: "http://${JENKINS_SERVICE_SERVICE_HOST}:${JENKINS_SERVICE_SERVICE_PORT}" 
        maxRequestsPerHostStr: "32"
        name: "kubernetes"
        readTimeout: 15
        serverUrl: "https://kubernetes.docker.internal:6443/"
        skipTlsVerify: true
unclassified:
    gitHubPluginConfig:
        configs:
        -  name: "default"
           credentialsId: "4c65c3ce-abf9-498d-9cb6-985c27c2f553"
        hookUrl: "${MY_JENKINS_PROXY}"
    slackNotifier:
      botUser: false
      sendAsText: false
      teamDomain: "revaturetrain-cx22851"
      tokenCredentialId: "${SLACK_TOKEN}"
tool:
  git:
    installations:
      - home: "git"
        name: "Default"
  maven:
    installations:
    - name: "maven3"
      properties:
      - installSource:
          installers:
          - maven:
              id: "3.5.4"
jobs:
  - script: >
      pipelineJob('mvn-exists-test') {
        definition {
          cps {
            script("""\
              pipeline {
                agent any
                tools {
                // Install the Maven version configured as "M3" and add it to the path.
                  maven "maven3"
                }
                stages {
                  stage ('test') {
                    steps {
                      echo "hello"
                      sh "mvn -v"
                    }
                  }
                }
              }""".stripIndent())
          }
        }
      }
  - script: >
      pipelineJob('Http-server') {
        definition {
          cpsScm {
            scm {
              git {
                remote {
                  url('https://github.com/200803-java-devops/http-server.git')
                }
                branch('*/master')
              }
            }
            lightweight()
          }
        }
      }